start
from aiogram import Bot, Dispatcher
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, Message, CallbackQuery
from aiogram import F
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.types import BotCommand
import asyncio
from datetime import datetime, timedelta
import requests





# –¢–æ–∫–µ–Ω –±–æ—Ç–∞
TOKEN = "7311925613:AAEozZhlP1th7_X3LRJS_7lo3jsjy4ALHfE"
DB_URI ="postgresql://postgres:CytrXtfYkeOEPafHduRqrWpGbsDyYTRK@postgres.railway.internal:5432/railway"

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)
storage = MemoryStorage()
dp = Dispatcher(bot, storage=storage)
dp.middleware.setup(LoggingMiddleware())


db_connection = psycopg2.connect(DB_URI, sslmode="require")
db_object = db_connection.cursor()
# –°—Å—ã–ª–∫–∏ –Ω–∞ —Å–ø–æ–Ω—Å–æ—Ä–æ–≤
SPONSORS = [
    "https://t.me/+ZWDMAtOj1c5jN2Jk",
    "https://t.me/+ZWDMAtOj1c5jN2Jk",
    "https://t.me/+ZWDMAtOj1c5jN2Jk",
    "https://t.me/+ZWDMAtOj1c5jN2Jk",
    "https://t.me/+ZWDMAtOj1c5jN2Jk"
]

# –°—Å—ã–ª–∫–∞ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –∫–æ–º–∞–Ω–¥—É
TEAM_LINK = "https://t.me/+UaMfr7uB405mMGNi"

# –°—Å—ã–ª–∫–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å—Ä–µ–¥—Å—Ç–≤
WITHDRAW_LINK = "https://t.me/c/2350708541/5"

# –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
bot = Bot(token=TOKEN)
dp = Dispatcher(storage=MemoryStorage())
from flask import Flask
import os

# –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Flask
app = Flask(__name__)






# –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
users = {}
stats = {
    "total_users": 0,
    "today_users": 0,
    "total_payouts": 0.0
}

# –ö–Ω–æ–ø–∫–∏ —Å–æ —Å–ø–æ–Ω—Å–æ—Ä–∞–º–∏
sponsors_keyboard = InlineKeyboardMarkup(
    inline_keyboard=[ 
        [InlineKeyboardButton(text="‚ò†Ô∏è –°–ø–æ–Ω—Å–æ—Ä 1", url=SPONSORS[0]),
         InlineKeyboardButton(text="‚ò†Ô∏è –°–ø–æ–Ω—Å–æ—Ä 2", url=SPONSORS[1])],
        [InlineKeyboardButton(text="‚ò†Ô∏è –°–ø–æ–Ω—Å–æ—Ä 3", url=SPONSORS[2])],
        [InlineKeyboardButton(text="‚ò†Ô∏è –°–ø–æ–Ω—Å–æ—Ä 4", url=SPONSORS[3]),
         InlineKeyboardButton(text="‚ò†Ô∏è –°–ø–æ–Ω—Å–æ—Ä 5", url=SPONSORS[4])],
        [InlineKeyboardButton(text="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É ‚úÖ", callback_data="check_subscription")]
    ]
)
@dp.callback_query(F.data == "check_subscription")
async def check_subscription(callback: CallbackQuery):
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–¥–ø–∏—Å–∫—É –∏ –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –∫–æ–º–∞–Ω–¥—É.
    """
    await callback.message.edit_text("‚è≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏... –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ.")
    await asyncio.sleep(2)  # –ó–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –∏–º–∏—Ç–∞—Ü–∏–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏

    is_subscribed = True  # –ó–¥–µ—Å—å –Ω—É–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –ø–æ–¥–ø–∏—Å–∫–∏, –µ—Å–ª–∏ –æ–Ω–∞ –¥–æ—Å—Ç—É–ø–Ω–∞

    if is_subscribed:
        # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É"
        await callback.message.edit_text(
            "‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞! –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –∫–æ–º–∞–Ω–¥—É.",
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="–ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É", url=TEAM_LINK)],
                [InlineKeyboardButton(text="–Ø –≤—Å—Ç—É–ø–∏–ª –≤ –∫–æ–º–∞–Ω–¥—É", callback_data="confirm_team_join")]
            ])
        )
    else:
        # –ï—Å–ª–∏ –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞
        await callback.message.edit_text("‚ùó –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª.")
        
@dp.callback_query(F.data == "confirm_team_join")
async def confirm_team_join(callback: CallbackQuery):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–Ø –≤—Å—Ç—É–ø–∏–ª –≤ –∫–æ–º–∞–Ω–¥—É". –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è.
    """
    user_id = callback.from_user.id
    user_data = users.get(user_id, {})

    if user_data:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –ª–∏ —É–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        if user_data["team_joined"]:
            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            await callback.message.edit_text(
                "üéâ –í—ã —É–∂–µ –≤—Å—Ç—É–ø–∏–ª–∏ –≤ –∫–æ–º–∞–Ω–¥—É!",
                reply_markup=control_panel_menu  # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é
            )
        else:
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ –æ–Ω –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ –∫–æ–º–∞–Ω–¥–µ
            user_data["team_joined"] = True

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º
            await callback.message.edit_text(
                "üéâ –í—ã —É—Å–ø–µ—à–Ω–æ –≤—Å—Ç—É–ø–∏–ª–∏ –≤ –∫–æ–º–∞–Ω–¥—É!",
                reply_markup=control_panel_menu  # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é
            )
            
            


# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
control_panel_menu = InlineKeyboardMarkup(inline_keyboard=[ 
    [InlineKeyboardButton(text="üíª –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç", callback_data="profile")],
    [InlineKeyboardButton(text="üìö –ú–∞–≥–∞–∑–∏–Ω", callback_data="shop")],
    [InlineKeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="statistics")],
    [InlineKeyboardButton(text="üìñ –û –±–æ—Ç–µ", callback_data="about_bot")]
])

# –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
back_button = InlineKeyboardMarkup(inline_keyboard=[ 
    [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_main_menu")] 
])

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥" –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
@dp.callback_query(F.data == "back_to_main_menu")
async def back_to_main_menu(callback: CallbackQuery):
    await callback.message.edit_text(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è!",
        reply_markup=control_panel_menu
    )

# –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç —Å –∫–Ω–æ–ø–∫–∞–º–∏ "–†–µ—Ñ–µ—Ä–∞–ª—ã" –∏ "–í—ã–≤–µ—Å—Ç–∏" –≤ –æ–¥–Ω–æ–º —Ä—è–¥—É, –∫–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" –≤ –¥—Ä—É–≥–æ–º
profile_keyboard = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="üë• –†–µ—Ñ–µ—Ä–∞–ª—ã", callback_data="referrals"),
     InlineKeyboardButton(text="üí∏ –í—ã–≤–µ—Å—Ç–∏", url=WITHDRAW_LINK)],  # –ö–Ω–æ–ø–∫–∞ –≤—ã–≤–æ–¥–∞
    [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_profile_menu")]  # –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥
])

# –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ —Ä–∞–∑–¥–µ–ª "–†–µ—Ñ–µ—Ä–∞–ª—ã" –∏–∑ –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞
back_from_referrals_button = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_profile_from_referrals")]
])

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–†–µ—Ñ–µ—Ä–∞–ª—ã"
@dp.callback_query(F.data == "referrals")
async def referrals(callback: CallbackQuery):
    user_id = callback.from_user.id
    user_data = users.get(user_id, {})
    if user_data:
        referral_link = user_data["ref_link"]
        referrals_count = user_data["referrals"]
        referral_message = (
            f"üîó –í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞: {referral_link}\n"
            f"üë• –í—Å–µ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: {referrals_count}"
        )
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥", —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç
        await callback.message.edit_text(referral_message, reply_markup=back_from_referrals_button)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥" –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç
@dp.callback_query(F.data == "back_to_profile_from_referrals")
async def back_to_profile_from_referrals(callback: CallbackQuery):
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç
    await profile(callback)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥" –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é
@dp.callback_query(F.data == "back_to_profile_menu")
async def back_to_profile_menu(callback: CallbackQuery):
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç
    await profile(callback)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç"
@dp.callback_query(F.data == "profile")
async def profile(callback: CallbackQuery):
    user_id = callback.from_user.id
    user_data = users.get(user_id, {})

    if user_data:
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        status = get_user_status(user_data["referrals"])

        # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ –∑–∞ —Å–µ–≥–æ–¥–Ω—è –∏ –∑–∞ –Ω–µ–¥–µ–ª—é
        weekly_referrals = get_weekly_referrals(user_id)
        today_referrals = user_data["referral_stats"].get(get_today(), 0)

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        profile_message = (
            "‚ò†Ô∏è ùêÉùêûùêöùê≠ùê°ùê•ùêûùê¨ùê¨ || ùêìùêûùêöùê¶\n\n"
            "üíª‚Äî–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç\n"
            f"‚î£üÜî –ú–æ–π ID: {user_id}\n"
            f"‚î£üí∞ –ë–∞–ª–∞–Ω—Å: {user_data['balance']}$\n"
            f"‚î£üèÜ –°—Ç–∞—Ç—É—Å: {status}\n"
            f"‚î£üë• –†–µ—Ñ–µ—Ä–∞–ª–æ–≤ —Å–µ–≥–æ–¥–Ω—è: {today_referrals}\n"
            f"‚î£üìÖ –†–µ—Ñ–µ—Ä–∞–ª–æ–≤ –∑–∞ –Ω–µ–¥–µ–ª—é: {weekly_referrals}\n"
            f"‚î£üåü –í—Å–µ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: {user_data['referrals']}"
        )

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–∞–Ω–µ–ª—å—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        await callback.message.edit_text(profile_message, reply_markup=profile_keyboard)



# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–π –¥–∞—Ç—ã
def get_today():
    return datetime.now().strftime("%Y-%m-%d")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–¥—Å—á—ë—Ç–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ –∑–∞ –Ω–µ–¥–µ–ª—é
def get_weekly_referrals(user_id):
    today = datetime.now()
    week_ago = today - timedelta(days=7)
    user_data = users.get(user_id, {})
    referral_stats = user_data.get("referral_stats", {})
    return sum(count for date, count in referral_stats.items() if week_ago.strftime("%Y-%m-%d") <= date <= today.strftime("%Y-%m-%d"))

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message(F.text.startswith("/start"))
async def send_welcome(message: Message):
    user_id = message.from_user.id
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–µ—Ä–µ–¥–∞–Ω –ª–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π ID
    referrer_id = None
    if len(message.text.split()) > 1:
        referrer_id = message.text.split()[1]
        try:
            referrer_id = int(referrer_id)
        except ValueError:
            referrer_id = None

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–æ–≤—ã–π, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ –±–∞–∑—É
    if user_id not in users:
        users[user_id] = {
            "balance": 0.0,
            "referrals": 0,
            "referral_earnings": 0.0,
            "joined_at": datetime.now().strftime("%Y-%m-%d %H:%M:%S"),
            "ref_link": f"https://t.me/{(await bot.get_me()).username}?start={user_id}",
            "team_joined": False,
            "referral_stats": {}
        }
        stats["total_users"] += 1
        stats["today_users"] += 1

        # –ï—Å–ª–∏ –µ—Å—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π ID, —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ —É –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–µ–≥–æ
        if referrer_id and referrer_id in users:
            users[referrer_id]["referrals"] += 1
            users[referrer_id]["balance"] += 0.5  # –î–æ–±–∞–≤–ª—è–µ–º $0.5 –∑–∞ –Ω–æ–≤–æ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞
            users[referrer_id]["referral_earnings"] += 0.5  # –£—á–∏—Ç—ã–≤–∞–µ–º –∑–∞—Ä–∞–±–æ—Ç–æ–∫ –æ—Ç —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤

            # –£—á–∏—Ç—ã–≤–∞–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—ã –ø–æ –¥–∞—Ç–µ
            today = get_today()
            if today not in users[referrer_id]["referral_stats"]:
                users[referrer_id]["referral_stats"][today] = 0
            users[referrer_id]["referral_stats"][today] += 1

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –Ω–æ–≤—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
        await message.answer(
            "‚úÖ –ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à–∏—Ö —Å–ø–æ–Ω—Å–æ—Ä–æ–≤, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å!",
            reply_markup=sponsors_keyboard
        )
    else:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ –∫–Ω–æ–ø–æ–∫
        await message.answer(
            "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –æ–±—Ä–∞—Ç–Ω–æ! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π."
        )

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def get_user_status(referrals):
    if referrals < 50:
        return "–í–æ–∑—Ä–æ–∂–¥—ë–Ω–Ω—ã–π"
    elif 50 <= referrals < 100:
        return "–ü—Ä–∏–∑—Ä–∞–∫"
    elif 100 <= referrals < 250:
        return "–°–ø–µ–∫—Ç—Ä"
    elif 250 <= referrals < 500:
        return "–§–∞–Ω—Ç–æ–º"
    else:
        return "–ë–µ—Å—Å–º–µ—Ä—Ç–Ω—ã–π"

# –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç —Å –∫–Ω–æ–ø–∫–∞–º–∏ "–†–µ—Ñ–µ—Ä–∞–ª—ã" –∏ "–í—ã–≤–µ—Å—Ç–∏" –≤ –æ–¥–Ω–æ–º —Ä—è–¥—É, –∫–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" –≤ –¥—Ä—É–≥–æ–º
profile_keyboard = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="üë• –†–µ—Ñ–µ—Ä–∞–ª—ã", callback_data="referrals"),
     InlineKeyboardButton(text="üí∏ –í—ã–≤–µ—Å—Ç–∏", url=WITHDRAW_LINK)],  # –ö–Ω–æ–ø–∫–∞ –≤—ã–≤–æ–¥–∞
    [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_profile_menu")]  # –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥
])

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç"
@dp.callback_query(F.data == "profile")
async def profile(callback: CallbackQuery):
    user_id = callback.from_user.id
    user_data = users.get(user_id, {})

    if user_data:
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        status = get_user_status(user_data["referrals"])

        # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ –∑–∞ —Å–µ–≥–æ–¥–Ω—è –∏ –∑–∞ –Ω–µ–¥–µ–ª—é
        weekly_referrals = get_weekly_referrals(user_id)
        today_referrals = user_data["referral_stats"].get(get_today(), 0)

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        profile_message = (
            "‚ò†Ô∏è ùêÉùêûùêöùê≠ùê°ùê•ùêûùê¨ùê¨ || ùêìùêûùêöùê¶\n\n"
            "üíª‚Äî–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç\n"
            f"‚î£üÜî –ú–æ–π ID: {user_id}\n"
            f"‚î£üí∞ –ë–∞–ª–∞–Ω—Å: {user_data['balance']}$\n"
            f"‚î£üèÜ –°—Ç–∞—Ç—É—Å: {status}\n"
            f"‚î£üë• –†–µ—Ñ–µ—Ä–∞–ª–æ–≤ —Å–µ–≥–æ–¥–Ω—è: {today_referrals}\n"
            f"‚î£üìÖ –†–µ—Ñ–µ—Ä–∞–ª–æ–≤ –∑–∞ –Ω–µ–¥–µ–ª—é: {weekly_referrals}\n"
            f"‚î£üåü –í—Å–µ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: {user_data['referrals']}"
        )

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–∞–Ω–µ–ª—å—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        await callback.message.edit_text(profile_message, reply_markup=profile_keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥" –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç
@dp.callback_query(F.data == "back_to_profile_menu")
async def back_to_profile_menu(callback: CallbackQuery):
    # –ü–æ–≤—Ç–æ—Ä–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç
    await profile(callback)  # –ü–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞




# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"
@dp.callback_query(F.data == "statistics")
async def statistics(callback: CallbackQuery):
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    total_users = stats["total_users"]
    today_users = stats["today_users"]
    total_payouts = stats["total_payouts"]
    
    

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    statistics_message = (
        "‚ò†Ô∏è ùêÉùêûùêöùê≠ùê°ùê•ùêûùê¨ùê¨ || ùêìùêûùêöùê¶\n\n"
        "üìä‚Äî–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n"
        f"‚î£–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–æ—Ç–µ: {total_users}\n"
        f"‚îó–ó–∞ —Å–µ–≥–æ–¥–Ω—è –≤ –±–æ—Ç–∞ –∑–∞—à–ª–æ: {today_users}\n"
    )

    # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    back_button = InlineKeyboardMarkup(inline_keyboard=[ 
        [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_main_menu")] 
    ])

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
    await callback.message.edit_text(statistics_message, reply_markup=back_button)
    
    # –°—Å—ã–ª–∫–∞ –Ω–∞ –º–∞–≥–∞–∑–∏–Ω
SHOP_LINK = "https://t.me/+t2OUM3mp0BphNzVi"

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–æ–π "–ú–∞–≥–∞–∑–∏–Ω"
control_panel_menu = InlineKeyboardMarkup(inline_keyboard=[ 
    [InlineKeyboardButton(text="üíª –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç", callback_data="profile")],
    [InlineKeyboardButton(text="üìö –ú–∞–≥–∞–∑–∏–Ω", url=SHOP_LINK)],  # –ö–Ω–æ–ø–∫–∞ —Å —Å—Å—ã–ª–∫–æ–π –Ω–∞ –º–∞–≥–∞–∑–∏–Ω
    [InlineKeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="statistics")],
    [InlineKeyboardButton(text="üìñ –û –±–æ—Ç–µ", callback_data="about_bot")]
])

# –°—Å—ã–ª–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –≤ —Ä–∞–∑–¥–µ–ª–µ "–û –±–æ—Ç–µ"
INFO_LINK = "https://t.me/c/2350708541/3"
PAYMENTS_LINK = "https://t.me/c/2350708541/5"
MANUAL_LINK = "https://t.me/c/2350708541/6"
CHAT_LINK = "https://t.me/c/2350708541/43"
TRAINING_LINK = "https://t.me/c/2350708541/48"

# –ö–Ω–æ–ø–∫–∏ –¥–ª—è "–û –±–æ—Ç–µ"
about_bot_keyboard = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", url=INFO_LINK)],
    [InlineKeyboardButton(text="üí∏ –í—ã–ø–ª–∞—Ç—ã", url=PAYMENTS_LINK)],
    [InlineKeyboardButton(text="üìò –ú–∞–Ω—É–∞–ª", url=MANUAL_LINK)],
    [InlineKeyboardButton(text="üí¨ –ß–∞—Ç", url=CHAT_LINK)],
    [InlineKeyboardButton(text="üéì –û–±—É—á–µ–Ω–∏–µ", url=TRAINING_LINK)],
    [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_main_menu")]
])

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–û –±–æ—Ç–µ"
@dp.callback_query(F.data == "about_bot")
async def about_bot(callback: CallbackQuery):
    await callback.message.edit_text(
        "‚ò†Ô∏è ùêÉùêûùêöùê≠ùê°ùê•ùêûùê¨ùê¨ || ùêìùêûùêöùê¶ \n\n üìö –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ ùêÉùêûùêöùê≠ùê°ùê•ùêûùê¨ùê¨ || ùêìùêûùêöùê¶",
        reply_markup=about_bot_keyboard
    )
# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–∞–º–∏ –ø–æ –¥–≤–∞ –≤ —Ä—è–¥—É
control_panel_menu = InlineKeyboardMarkup(inline_keyboard=[ 
    [InlineKeyboardButton(text="üíª –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç", callback_data="profile"),
     InlineKeyboardButton(text="üìö –ú–∞–≥–∞–∑–∏–Ω", url=SHOP_LINK)],  # –ö–Ω–æ–ø–∫–∞ —Å —Å—Å—ã–ª–∫–æ–π –Ω–∞ –º–∞–≥–∞–∑–∏–Ω
    [InlineKeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="statistics"),
     InlineKeyboardButton(text="üìñ –û –±–æ—Ç–µ", callback_data="about_bot")]
])

# –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç —Å –∫–Ω–æ–ø–∫–∞–º–∏ "–†–µ—Ñ–µ—Ä–∞–ª—ã" –∏ "–í—ã–≤–µ—Å—Ç–∏" –≤ –æ–¥–Ω–æ–º —Ä—è–¥—É, –∫–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" –≤ –¥—Ä—É–≥–æ–º
profile_keyboard = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="üë• –†–µ—Ñ–µ—Ä–∞–ª—ã", callback_data="referrals"),
     InlineKeyboardButton(text="üí∏ –í—ã–≤–µ—Å—Ç–∏", url=WITHDRAW_LINK)],  # –ö–Ω–æ–ø–∫–∞ –≤—ã–≤–æ–¥–∞
    [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_main_menu")]  # –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥
])

# –°—Å—ã–ª–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –≤ —Ä–∞–∑–¥–µ–ª–µ "–û –±–æ—Ç–µ"
INFO_LINK = "https://t.me/c/2350708541/3"
PAYMENTS_LINK = "https://t.me/c/2350708541/5"
MANUAL_LINK = "https://t.me/c/2350708541/6"
CHAT_LINK = "https://t.me/c/2350708541/43"
TRAINING_LINK = "https://t.me/c/2350708541/48"

# –ö–Ω–æ–ø–∫–∏ –¥–ª—è "–û –±–æ—Ç–µ", —Ä–∞—Å—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –ø–æ —Ç—Ä–∏ –≤ —Ä—è–¥—É
about_bot_keyboard = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", url=INFO_LINK),
     InlineKeyboardButton(text="üí∏ –í—ã–ø–ª–∞—Ç—ã", url=PAYMENTS_LINK)],  # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏ –í—ã–ø–ª–∞—Ç—ã –≤ –æ–¥–Ω–æ–º —Ä—è–¥—É
    [InlineKeyboardButton(text="üìò –ú–∞–Ω—É–∞–ª", url=MANUAL_LINK),
     InlineKeyboardButton(text="üí¨ –ß–∞—Ç", url=CHAT_LINK)],  # –ú–∞–Ω—É–∞–ª –∏ –ß–∞—Ç –≤–æ –≤—Ç–æ—Ä–æ–º —Ä—è–¥—É
    [InlineKeyboardButton(text="üéì –û–±—É—á–µ–Ω–∏–µ", url=TRAINING_LINK)],  # –û–±—É—á–µ–Ω–∏–µ –≤ —Ç—Ä–µ—Ç—å–µ–º —Ä—è–¥—É
    [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_main_menu")]  # –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥
])

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–û –±–æ—Ç–µ"
@dp.callback_query(F.data == "about_bot")
async def about_bot(callback: CallbackQuery):
    await callback.message.edit_text(
        "üîß –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ:\n\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª.",
        reply_markup=about_bot_keyboard
    )

    import requests

# –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –≤–µ–±—Ö—É–∫
def set_webhook():
    url = f'https://api.telegram.org/bot<7311925613:AAEozZhlP1th7_X3LRJS_7lo3jsjy4ALHfE>/setWebhook?url=https://your-server.com/your-webhook-endpoint'
    response = requests.get(url)
    print(response.json())

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç Telegram
def handle_updates(update):
    # –ó–¥–µ—Å—å –∫–æ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π)
    pass

# –í—ã–∑–æ–≤–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–µ–±—Ö—É–∫–∞
set_webhook()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–≤–æ–¥–∞ —Å—Ä–µ–¥—Å—Ç–≤
@dp.callback_query(F.data == "withdraw")
async def withdraw(callback: CallbackQuery):
    user_id = callback.from_user.id
    user_data = users.get(user_id, {})

    if user_data:
        balance = user_data['balance']
        
        if balance > 0:
            # –õ–æ–≥–∏–∫–∞ –≤—ã–≤–æ–¥–∞ —Å—Ä–µ–¥—Å—Ç–≤
            # –ü—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∞–µ—Ç —Å–≤–æ–∏ –¥–µ–Ω—å–≥–∏, –∏ —Ç–µ–ø–µ—Ä—å –Ω—É–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            user_data['balance'] = 0.0  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ—Å–ª–µ –≤—ã–≤–æ–¥–∞

            # –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤—ã–ø–ª–∞—Ç
            stats["total_payouts"] += balance  # –î–æ–±–∞–≤–ª—è–µ–º –≤—ã–ø–ª–∞—á–µ–Ω–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ –∫ –æ–±—â–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ
            stats["today_users"] -= 1  # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —Å–¥–µ–ª–∞–≤—à–∏—Ö –≤—ã–≤–æ–¥ —Å–µ–≥–æ–¥–Ω—è

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –≤—ã–≤–æ–¥–µ
            await callback.message.edit_text(f"üí∏ –í–∞—à –≤—ã–≤–æ–¥ –Ω–∞ —Å—É–º–º—É {balance}$ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω! –í–∞—à –Ω–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: 0$")
        else:
            # –ï—Å–ª–∏ –±–∞–ª–∞–Ω—Å 0
            await callback.message.edit_text("‚ùó –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –≤—ã–≤–æ–¥–∞.")
    else:
        await callback.message.edit_text("‚ùó –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")

        
# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    await bot.set_my_commands([ 
        BotCommand(command="/start", description="–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É")
    ])
    await dp.start_polling(bot)


from psycopg2 import OperationalError

try:
    db_connection = psycopg2.connect(DB_URI, sslmode="require")
    db_object = db_connection.cursor()
except OperationalError as e:
    print(f"–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
    exit()

@dp.message_handler(commands=['start'])
async def command_start(message: types.Message):
    user_id = message.from_user.id
    username = message.from_user.username

    if message.chat.type == "private":
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
            db_object.execute(f"SELECT id FROM users WHERE id = {user_id}")
            result = db_object.fetchone()

            if not result:
                # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                db_object.execute("INSERT INTO users(id, username) VALUES (%s, %s)", (user_id, username))
                db_connection.commit()
                await bot.send_message(message.chat.id, f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {username}!\n–í—ã –ø–æ–ª—É—á–∏–ª–∏ 2 –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –±–∞–ª–ª–∞.", reply_markup=await gen_main_markup())
            else:
                await bot.send_message(message.chat.id, f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –æ–±—Ä–∞—Ç–Ω–æ, {username}!", reply_markup=await gen_main_markup())
        except Exception as e:
            await bot.send_message(message.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö.")
            print(f"–û—à–∏–±–∫–∞: {e}")


if __name__ == "__main__":
    asyncio.run(main())

